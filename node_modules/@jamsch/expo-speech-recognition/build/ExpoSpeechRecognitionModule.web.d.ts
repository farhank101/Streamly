import type { ExpoSpeechRecognitionModuleType, ExpoSpeechRecognitionNativeEventMap } from "./ExpoSpeechRecognitionModule.types";
export declare const ExpoSpeechRecognitionModule: ExpoSpeechRecognitionModuleType;
export declare const ExpoSpeechRecognitionModuleEmitter: {
    _nativeListeners: Map<string, Set<(event: any) => void>>;
    _clientListeners: Map<(event: any) => void, (event: any) => void>;
    addListener<T extends keyof SpeechRecognitionEventMap>(eventName: T, listener: (ev: ExpoSpeechRecognitionNativeEventMap[T]) => void): {
        remove: () => void;
    };
    removeListener: (eventName: string, listener: (event: any) => void) => void;
    removeAllListeners: (eventName: string) => void;
};
//# sourceMappingURL=ExpoSpeechRecognitionModule.web.d.ts.map