{"version":3,"file":"useSpeechRecognitionEvent.js","sourceRoot":"","sources":["../src/useSpeechRecognitionEvent.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAE,kCAAkC,EAAE,MAAM,+BAA+B,CAAC;AAGnF;;;;;;;GAOG;AACH,MAAM,UAAU,yBAAyB,CAGvC,SAAY,EACZ,QAA8D;IAE9D,MAAM,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;IACrC,WAAW,CAAC,OAAO,GAAG,QAAQ,CAAC;IAE/B,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;QACpC,MAAM,YAAY,GAAG,kCAAkC,CAAC,WAAW,CACjE,SAAS,EACT,OAAO,CACR,CAAC;QACF,OAAO,YAAY,CAAC,MAAM,CAAC;IAC7B,CAAC,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["import { useEffect, useRef } from \"react\";\nimport { ExpoSpeechRecognitionModuleEmitter } from \"./ExpoSpeechRecognitionModule\";\nimport { ExpoSpeechRecognitionNativeEventMap } from \"./ExpoSpeechRecognitionModule.types\";\n\n/**\n * This hook allows you to listen to native events emitted by the `ExpoSpeechRecognitionModule`.\n *\n * Note: this is not the same as the `SpeechRecognition` event listener on the web speech API.\n *\n * @param eventName The name of the event to listen to\n * @param listener The listener function to call when the event is emitted\n */\nexport function useSpeechRecognitionEvent<\n  K extends keyof ExpoSpeechRecognitionNativeEventMap,\n>(\n  eventName: K,\n  listener: (ev: ExpoSpeechRecognitionNativeEventMap[K]) => void,\n) {\n  const listenerRef = useRef(listener);\n  listenerRef.current = listener;\n\n  useEffect(() => {\n    const handler = listenerRef.current;\n    const subscription = ExpoSpeechRecognitionModuleEmitter.addListener(\n      eventName,\n      handler,\n    );\n    return subscription.remove;\n  }, [eventName, listenerRef]);\n}\n"]}